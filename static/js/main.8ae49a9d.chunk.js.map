{"version":3,"sources":["components/CreateTaskForm.js","components/TaskCard.js","components/Column.js","components/Body.js","App.js","serviceWorker.js","index.js"],"names":["CreateTaskForm","props","useState","setStatus","className","isOpenCreateTaskForm","type","onClick","openCreateTaskForm","value","taskInput","onChange","onTaskChange","htmlFor","e","target","defaultValue","id","statuses","sort","a","b","map","el","key","taskSubmit","disabled","isActiveButtonTaskCreate","taskCancel","left","width","height","viewBox","fill","xmlns","fillRule","d","right","ffillRule","plus","minus","trash","pen","TaskCard","taskEdit","setTaskEdit","priority","task","show","setShow","handleClose","changePriority","direction","priorities","find","name","onTaskSave","trim","status","changeStatus","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","deleteTask","Column","tasks","filter","align","initialTasks","uuidv4","App","setTasks","setIsOpenCreateTaskForm","setIsActiveButtonTaskCreate","setTaskInput","length","preventDefault","console","log","updatedTasks","indexOf","obj","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8ae49a9d.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\n\nfunction CreateTaskForm(props) {\n    const [status, setStatus] = useState('');\n\n  return (\n    <div>\n        <div className=\"container\">\n            <h3> Kanban Board </h3>\n\n\n            {!props.isOpenCreateTaskForm &&\n            <button type=\"button\"\n                    className=\"btn btn-info\"\n                    onClick={props.openCreateTaskForm}>\n                Create Task\n            </button>\n            }\n            {props.isOpenCreateTaskForm &&\n            <form>\n                <div className=\"form-group\">\n                    <label>Enter task name:</label>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           value={props.taskInput}\n                           onChange={props.onTaskChange}/>\n\n                </div>\n\n                <div className=\"input-group mb-3\">\n                    <div className=\"input-group-prepend\">\n                        <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Statuses:</label>\n                    </div>\n                    <select onChange={(e) => setStatus(e.target.value)} defaultValue=\"done\" className=\"custom-select\" id=\"inputGroupSelect01\">\n\n                        {\n                            props.statuses.sort((a, b) => b - a)\n                                .map(el =>\n                                    <option key={el} value={el}>{el}</option>\n                                )\n                        }\n\n                    </select>\n                </div>\n\n\n\n                <button type=\"submit\" className=\"btn btn-info\"\n                        onClick={props.taskSubmit}\n                        disabled={!props.isActiveButtonTaskCreate}>\n                    Submit\n                </button>\n\n                <button className=\"btn btn-secondary\"\n                        onClick={props.taskCancel}>\n                    Cancel\n                </button>\n\n\n            </form>\n            }\n\n\n\n      </div>\n\n    </div>\n  );\n}\n\nexport default CreateTaskForm;\n","import React, {useState} from 'react';\nimport {Button, Modal} from \"react-bootstrap\";\n\nconst left = (<svg className=\"bi bi-arrow-left-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M8.354 11.354a.5.5 0 0 0 0-.708L5.707 8l2.647-2.646a.5.5 0 1 0-.708-.708l-3 3a.5.5 0 0 0 0 .708l3 3a.5.5 0 0 0 .708 0z\"/>\n    <path fillRule=\"evenodd\" d=\"M11.5 8a.5.5 0 0 0-.5-.5H6a.5.5 0 0 0 0 1h5a.5.5 0 0 0 .5-.5z\"/>\n</svg>)\nconst right = (<svg className=\"bi bi-arrow-right-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n         xmlns=\"http://www.w3.org/2000/svg\">\n      <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n      <path fillRule=\"evenodd\"\n            d=\"M7.646 11.354a.5.5 0 0 1 0-.708L10.293 8 7.646 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"/>\n      <path ffillRule=\"evenodd\" d=\"M4.5 8a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5z\"/>\n    </svg>)\n\nconst plus = (<svg className=\"bi bi-plus-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M8 3.5a.5.5 0 0 1 .5.5v4a.5.5 0 0 1-.5.5H4a.5.5 0 0 1 0-1h3.5V4a.5.5 0 0 1 .5-.5z\"/>\n  <path fillRule=\"evenodd\" d=\"M7.5 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1H8.5V12a.5.5 0 0 1-1 0V8z\"/>\n  <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n</svg>)\n\nconst minus = (<svg className=\"bi bi-dash-circle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n  <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\n  <path fillRule=\"evenodd\" d=\"M3.5 8a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 0 1H4a.5.5 0 0 1-.5-.5z\"/>\n</svg>)\n\nconst trash = (<svg className=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                   xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n      d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n  <path fillRule=\"evenodd\"\n        d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n</svg>)\n\nconst pen = (<svg className=\"bi bi-pencil\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n                  xmlns=\"http://www.w3.org/2000/svg\">\n    <path fillRule=\"evenodd\"\n          d=\"M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z\"/>\n    <path fillRule=\"evenodd\"\n          d=\"M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z\"/>\n</svg>)\n\nfunction TaskCard(props) {\n\n  const handleRight = () => props.changeStatus({id: props.task.id, direction: 'right'})\n  const handleLeft = () => props.changeStatus({id: props.task.id, direction: 'left'})\n\n\n  const [taskEdit, setTaskEdit] = useState({});\n\n  const editMode = (task) => {\n        setTaskEdit(task);\n  };\n\n  const onEditTaskChange = (e) => {\n        setTaskEdit({ ...taskEdit, name: e.target.value });\n  };\n\n  const taskSave = () => {\n        props.onTaskSave(taskEdit);\n        setTaskEdit({});\n  };\n\n  const handleUp = () => {\n        props.changePriority({id: props.task.id, direction: 'up'})\n  };\n\n  const handleDown = () => {\n        props.changePriority({id: props.task.id, direction: 'down'})\n  };\n\n  const priority = props.task.priority;\n\n  const [show, setShow] = useState(false);\n\n  const handleShow = () => {\n        setShow(true);\n  };\n\n  const handleClose = () => {\n        setShow(false);\n  };\n  const handleDelete = () => {\n        props.deleteTask(props.task)\n        handleClose();\n  };\n\n  return (\n    <div>\n      <div className=\"card m-2\">\n        <div className=\"card-body\">\n\n\n            {\n                priority < 3 && <div onClick={handleUp}>{minus}</div>\n            }\n\n            {\n                priority > 1 && <div onClick={handleDown}>{plus}</div>\n            }\n\n            {\n                priority === 1 &&\n                <span className=\"badge badge-danger\">\n                    {props.priorities.find(el => el.id === priority).priority}\n                </span>\n            }\n\n            {\n                priority === 2 &&\n                <span className=\"badge badge-warning\">\n                    {props.priorities.find(el => el.id === priority).priority}\n                </span>\n            }\n            {\n                priority === 3 &&\n                <span className=\"badge badge-success\">\n                    {props.priorities.find(el => el.id === priority).priority}\n                </span>\n            }\n\n\n                <div key={props.task.id} className=\"task-card\">\n                    {  taskEdit.id !== props.task.id &&\n                    <div className=\" float-right\">\n                        <span className=\" float-right\" onClick={handleShow}>{trash}</span>\n                        <span className=\" float-right\" onClick={() => editMode(props.task)}>{pen}</span>\n                    </div>}\n\n\n                    {\n                        taskEdit.id === props.task.id\n                            ? <div>\n                                <input type=\"text\"\n                                       className=\"form-control\"\n                                       value={taskEdit.name}\n                                       onChange={onEditTaskChange} />\n                                <button className=\"btn btn-outline-info btn-sm margin-left mt-1\"\n                                        onClick={taskSave}\n                                        disabled={!taskEdit.name.trim()}>\n                                    Save\n                                </button>\n\n                              </div>\n                            :   <label className=\"task-name mr-md-3\">{props.task.name}</label>\n\n                    }\n                </div>\n\n\n\n\n            {\n                props.task.status !== 'todo' && <span className= 'mr-2' onClick={handleLeft}>{left}</span>\n            }\n            {\n                props.task.status !== 'done' && <span onClick={handleRight}>{right}</span>\n            }\n\n\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Delete Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to delete task?</Modal.Body>\n                <Modal.Footer>\n                    <Button className=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button className=\"primary\" onClick={handleDelete}>\n                        Delete\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TaskCard;\n","import React from 'react';\nimport TaskCard from \"./TaskCard\";\n\n\nfunction Column(props) {\n  return (\n    <div>\n\n      {props.tasks\n          .filter(el => el.status === props.status)\n          .sort((a, b) => a.priority - b.priority)\n          .map(el =>  <TaskCard key={el.id}\n                                task={el}\n                                changeStatus={props.changeStatus}\n                                onTaskSave={props.onTaskSave}\n                                changePriority={props.changePriority}\n                                priorities={props.priorities}\n                                deleteTask={props.deleteTask}\n          />)\n      }\n\n    </div>\n  );\n}\n\nexport default Column;\n","import React from 'react';\nimport Column from \"./Column\";\nimport TaskCard from \"./TaskCard\";\n\n\n\nfunction Body(props) {\n  return (\n\n      <div className=\"container\">\n          <div className=\"container\">\n              <div className=\"row\">\n\n                  <div className=\"col-sm\">\n                      <div className=\"card m-2\" align=\"center\" > To Do </div>\n                      <Column tasks={props.tasks}\n                              status='todo'\n                              changeStatus={props.changeStatus}\n                              onTaskSave={props.onTaskSave}\n                              changePriority={props.changePriority}\n                              priorities={props.priorities}\n                              deleteTask={props.deleteTask}/>\n                  </div>\n\n                  <div className=\"col-sm\">\n                      <div className=\"card m-2\" align=\"center\" > In progress </div>\n                      <Column tasks={props.tasks}\n                              status='in progress'\n                              changeStatus={props.changeStatus}\n                              onTaskSave={props.onTaskSave}\n                              changePriority={props.changePriority}\n                              priorities={props.priorities}\n                              deleteTask={props.deleteTask}/>\n                  </div>\n\n                  <div className=\"col-sm\">\n                      <div className=\"card m-2\" align=\"center\" > Review </div>\n                      <Column tasks={props.tasks}\n                              status='review'\n                              changeStatus={props.changeStatus}\n                              onTaskSave={props.onTaskSave}\n                              changePriority={props.changePriority}\n                              priorities={props.priorities}\n                              deleteTask={props.deleteTask}/>\n                  </div>\n\n                  <div className=\"col-sm\">\n                     <div className=\"card m-2\" align=\"center\" > Done </div>\n                      <Column tasks={props.tasks}\n                              status='done'\n                              changeStatus={props.changeStatus}\n                              onTaskSave={props.onTaskSave}\n                              changePriority={props.changePriority}\n                              priorities={props.priorities}\n                              deleteTask={props.deleteTask}/>\n                  </div>\n\n\n              </div>\n          </div>\n      </div >\n  );\n}\n\nexport default Body;\n","import React, {useState} from 'react';\nimport CreateTaskForm from './components/CreateTaskForm';\nimport Body from './components/Body';\nimport { v4 as uuidv4 } from 'uuid';\nimport TaskCard from \"./components/TaskCard\";\n\n\nconst initialTasks = [\n    {id: uuidv4(), name: 'Do homework', status: 'todo', priority: 1},\n    {id: uuidv4(), name: 'Do laundry', status: 'in progress', priority: 3},\n    {id: uuidv4(), name: 'Make an appointment', status: 'review', priority: 1},\n    {id: uuidv4(), name: 'Call Mom', status: 'done', priority: 2},\n    {id: uuidv4(), name: 'Cleaning', status: 'todo', priority: 3},\n    {id: uuidv4(), name: 'Learn React', status: 'in progress', priority: 1},\n    {id: uuidv4(), name: 'Go shopping', status: 'review', priority: 2},\n    {id: uuidv4(), name: 'Watch lecture', status: 'done', priority: 1},\n];\n\nconst statuses = ['todo', 'in progress', 'review', 'done'];\n\nconst priorities =[\n    {id:1, priority: 'High'},\n    {id:2, priority: 'Medium'},\n    {id:3, priority: 'Low'},\n];\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks);\n    const [isOpenCreateTaskForm, setIsOpenCreateTaskForm] = useState(false);\n    const [isActiveButtonTaskCreate, setIsActiveButtonTaskCreate] = useState(false);\n    const [taskInput, setTaskInput] = useState('');\n\n\n\n    const openCreateTaskForm = () => {\n        setIsOpenCreateTaskForm(true);\n    };\n\n    const onTaskChange = (e) => {\n        setIsActiveButtonTaskCreate(e.target.value.length > 4);\n        setTaskInput(e.target.value);\n    };\n\n    const taskSubmit = (e) => {\n        e.preventDefault();\n        console.log(taskInput);\n        setTasks([...tasks, {id: uuidv4(), name: taskInput, status: 'todo', priority: 1}]);\n        setTaskInput('');\n        setIsOpenCreateTaskForm(false);\n        setIsActiveButtonTaskCreate(false);\n\n    };\n\n\n    const taskCancel = () => {\n        setTaskInput('');\n        setIsOpenCreateTaskForm(false);\n        setIsActiveButtonTaskCreate(false);\n    };\n\n    // const changeStatus = ({ id, direction }) => {\n    //     console.log(id, direction);\n    //     const taskIndex = tasks.findIndex(el => el.id === id)\n    //     console.log(taskIndex)\n    //     const clonedTasks = [...tasks];\n    //     clonedTasks[taskIndex].status = statuses[statuses.indexOf(clonedTasks[taskIndex].status) + (direction === 'left' ? -1 : 1)];\n    //     setTasks(clonedTasks);\n    //\n    // };// this alternative method write changeStatus\n\n    const changeStatus = ({id, direction}) => {\n        console.log(id, direction)\n        const updatedTasks = tasks.map(el => {\n            if (el.id === id) {\n                if (direction === 'left') {\n                    el.status = statuses[statuses.indexOf(el.status) - 1];\n                }\n                if (direction === 'right') {\n                    el.status = statuses[statuses.indexOf(el.status) + 1];\n                }\n                return el;\n            } else return el;\n\n        });\n        setTasks(updatedTasks);\n    };\n\n    const onTaskSave = (task) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === task.id) return { ...el, name: task.name }\n            else return el;\n        })\n        setTasks(updatedTasks);\n    };\n\n    const changePriority = ({id, direction}) => {\n        const updatedTasks = tasks.map(task => {\n            if (task.id === id) {\n                if (direction === 'up') {\n                    return {...task, priority: ++task.priority}\n                }\n                if (direction === 'down') {\n                    return {...task, priority: --task.priority}\n                }\n            }\n            return task\n        });\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (task) => {\n        const updatedTasks = tasks.filter(obj => obj.id !== task.id);\n        setTasks(updatedTasks);\n    };\n\n    return (\n    <div>\n     <CreateTaskForm isOpenCreateTaskForm={isOpenCreateTaskForm}\n                     openCreateTaskForm={openCreateTaskForm}\n                     onTaskChange={onTaskChange}\n                     isActiveButtonTaskCreate={isActiveButtonTaskCreate}\n                     taskInput={taskInput}\n                     taskSubmit={taskSubmit}\n                     taskCancel={taskCancel}\n                     statuses={statuses}\n\n\n     />\n\n     <Body tasks={tasks}\n           statuses={statuses}\n           changeStatus={changeStatus}\n           onTaskSave={onTaskSave}\n           changePriority={changePriority}\n           priorities={priorities}\n           deleteTask={deleteTask}/>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}